---
title: "Подготовка воспроизводимых отчетов"
description: "Создание воспроизводимых отчётов в RStudio с использованием стека технологий Rmarkdown и Quarto"
format: 
  md:
    output-file: README.md
---

## Цель

1.  Развернуть RStudio;
2.  Рассмотреть механизмы создания воспроизводимых отчётов;
3.  Провести анализ рассмотренных методов;

## ️Исходные данные

1.  R 4.4.1;
2.  RStudio 2024.04.2+764;

## ️Варианты решения задачи

Для создания воспроизводимых отчётов используются два основных инструмента: **R Markdown** и **Quarto**. Оба базируются на синтаксисе Markdown и интегрированы с языком R, но различаются функциональностью и гибкостью.

### R Markdown

**R Markdown** — это средство для создания динамических документов с использованием языка программирования R. Основные возможности:

1.  Полностью интегрирован в экосистему R;
2.  Для обработки документов используются пакеты `knitr` и `rmarkdown`;
3.  Поддерживаются следующие форматы экспорта: `HTML`, `PDF`, `Word`;
4.  Документы создаются с использованием синтаксиса Markdown и могут содержать как статические элементы, так и динамические блоки кода на R;
5.  Лёгкость в настройке и использовании для типовых задач анализа данных;

### Quarto Document

**Quarto** — более современный и гибкий инструмент, который поддерживает не только R, но и другие языки программирования, такие как Python и Julia. Ключевые особенности:

1.  Quarto интегрирует поддержку для работы с проектами, что подволяет более эффективно управлять масштабными отчётами и документами;
2.  Quarto поддерживает расширяемость и пользовательские настройки, позволяя разработать собсвенные форматы и стили;
3.  С помощью Quarto можно создавать отчёты на разных языках в одном документе;
4.  Quarto основан на R Markdown, и многие функции R Markdown также доступны в Quarto;
5.  Render Quarto Markdown предоставляет также директорию с `{название}_files`, содержащую дополнительные конфигурационные файлы отчёта;

## ️Общий план выполнения

В ходе работы предлагается использовать Quarto Document, ввиду более современного подхода, гибкости, а также независимости от языка R.

### Шаг 1: Настройка Quarto

Поскольку стабильная версия Quarto поставляется в комплекте с RStudio 2022.07.1+, установка в данном случае не требуется.

1.  **Получение данных об установленной версии Quarto и её компонентах:**
    ```{terminal}
    quarto check
    ```
2.  **Установить необходимые для работы пакеты (например, [MikTeX](https://www.reed.edu/data-at-reed/software/R/r_studio_pc.html))**

### Шаг 2: Создание отчёта с использованием Quarto

1.  **Создание нового документа:**
    -   Создайте новый файл Quarto: `File -> New File -> Quarto Document`;
    -   Задайте заголовок, а также выберите тип выходных дынных (`HTML`, `PDF`, `WORD`) и движок (`None`, `Knitr`, `Jupyter`);
2.  **Наполнение документа:**
    -   Введите желаемый текст в синтаксисе Markdown;
    -   По желанию вы можете добавить:
        -   блок кода (например, на Python):
            ```{Python}
            print('Hello World!')
            ```
        -   динамический код:
            ```{R}
            summary(cars)
            ```
        -   YAML-заголовок (начало документа), указав такие параметры как:
            -   `title` - название
            -   `author` - имя автора
            -   `format` - тип выходных данных
    -   Сгенерируйте отчёт сочетанием клавищ `Ctrl+Shift+K`;
3.  **Просмотр результата:**
    -   В рабочей директории появился файл (`HTML`, `PDF`, `WORD`), который вы можете открыть, чтобы проверить корректность работы;

## ️Оценка результата

В результате выполнения шагов были созданы следующие файлы:

1.  Отчёт в формате `HTML` (`PDF`) с динамическими результатами анализа на языках R и Python.
2.  Пример пользовательского формата отчёта с кастомными параметрами.

## ️Вывод

В ходе работы были изучены и освоены современные инструменты для создания воспроизводимых отчётов: **R Markdown** и **Quarto**. Quarto продемонстрировал свою гибкость, независимость от конкретного языка программирования, что сделало его предпочтительным выбором.
